import { NextRequest, NextResponse } from 'next/server';
// types
import { PaymentCallbackData } from '@/@types/yookassa';
import { CartItemDTO } from '@/shared/services/dto/cart.dto';
// prisma
import { prisma } from '@/prisma/prisma-client';
import { OrderStatus } from '@prisma/client';
// lib
import { sendEmail } from '@/shared/lib';
// components
import { OrderSuccessEmail } from '@/shared/components';

export async function POST(req: NextRequest) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –æ—Ç –Æ–∫–∞—Å—Å—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
    const body = (await req.json()) as PaymentCallbackData;

    // –ù–∞—Ö–æ–¥–∏–º –í –ë–î –∑–∞–∫–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –æ–ø–ª–∞—á–µ–Ω, –ø–æ id –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    const order = await prisma.order.findFirst({
      where: {
        id: Number(body.object.metadata.order_id),
      },
    });

    // –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç, —Ç–æ –æ—à–∏–±–∫–∞
    if (!order) {
      return NextResponse.json({ error: 'Order not found' });
    }

    const isSucceeded = body.object.status === 'succeeded';

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
    await prisma.order.update({
      where: {
        id: order.id,
      },
      data: {
        status: isSucceeded ? OrderStatus.SUCCEEDED : OrderStatus.CANCELLED,
      },
    });

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤ items
    const items = order?.items as unknown as CartItemDTO[];

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–æ—á—Ç—É –∫–ª–∏–µ–Ω—Ç–∞ –ø–∏—Å—å–º–æ –æ–± –æ–ø–ª–∞—Ç–µ –∑–∞–∫–∞–∑–∞, –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω
    if (isSucceeded) {
      await sendEmail(
        order.email,
        'Next Pizza / –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω! üéâ',
        OrderSuccessEmail({ orderId: order.id, items })
      );
    } else {
      //TODO –ø–∏—Å—å–º–æ –æ –Ω–µ—É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
    }
  } catch (error) {
    console.log('[Checkout Callback] Error:', error);

    return NextResponse.json({ error: 'Server error' });
  }
}
